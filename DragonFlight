local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local ringsFolder = workspace.FlightChallenge.Challenges.Hard.Rings

local tweenTime = 0.05
local offset = 20
local delayBetweenRings = 0.1
local passesPerRing = 3

-- Tween helper
local function tweenTo(cframe)
	local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear)
	local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = cframe})
	tween:Play()
	tween.Completed:Wait()
end

-- Loop through rings
for i = 1, 49 do
	local ring = ringsFolder:FindFirstChild(tostring(i))
	if ring and ring:IsA("BasePart") then
		local ringCFrame = ring.CFrame
		local backward = ringCFrame + ringCFrame.LookVector * -offset
		local forward = ringCFrame + ringCFrame.LookVector * offset

		-- ✅ Step 1: TP to center of the ring
		humanoidRootPart.CFrame = ringCFrame
		wait(0.05)

		-- ✅ Step 2: Tween back 20 studs
		tweenTo(backward)

		-- ✅ Step 3: Tween back and forth 3 times
		for _ = 1, passesPerRing do
			tweenTo(forward)
			tweenTo(backward)
		end
	else
		warn("Ring " .. i .. " not found or not a BasePart!")
	end
	wait(delayBetweenRings)
end
